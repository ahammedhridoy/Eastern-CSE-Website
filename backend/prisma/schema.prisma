// Database schema
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  email         String             @unique
  name          String
  password      String
  role          Role               @default(EDITOR)
  refreshTokens UserRefreshToken[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model UserRefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  userId    String   @map("user_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  EDITOR
  ADMIN
}

model ResetToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String
}

model Slider {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Faculty {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  image       String
  designation String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Teacher {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  designation String
  image       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Alumni {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  batch       String
  image       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Album {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  name      String
  slug      String
  images    Gallery[] @relation("AlbumImages")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Gallery {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  albumId   String?  @db.ObjectId
  album     Album?   @relation(fields: [albumId], references: [id], name: "AlbumImages")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
